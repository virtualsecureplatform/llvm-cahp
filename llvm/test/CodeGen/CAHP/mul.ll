; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=cahp  -verify-machineinstrs < %s \
; RUN:   | FileCheck %s -check-prefix=CAHP

define i16 @square(i16 %a) nounwind {
; CAHP-LABEL: square:
; CAHP:       # %bb.0:
; CAHP-NEXT:	addi2	sp, -2
; CAHP-NEXT:	swsp	ra, 0(sp)
; CAHP-NEXT:	mov	a1, a0
; CAHP-NEXT:	jsal	__mulhi3
; CAHP-NEXT:	lwsp	ra, 0(sp)
; CAHP-NEXT:	addi2	sp, 2
; CAHP-NEXT:	jr	ra
  %1 = mul i16 %a, %a
  ret i16 %1
}

define i16 @mul(i16 %a, i16 %b) nounwind {
; CAHP-LABEL: mul:
; CAHP:       # %bb.0:
; CAHP-NEXT:	addi2	sp, -2
; CAHP-NEXT:	swsp	ra, 0(sp)
; CAHP-NEXT:	jsal	__mulhi3
; CAHP-NEXT:	lwsp	ra, 0(sp)
; CAHP-NEXT:	addi2	sp, 2
; CAHP-NEXT:	jr	ra
  %1 = mul i16 %a, %b
  ret i16 %1
}

define i16 @mul_constant(i16 %a) nounwind {
; CAHP-LABEL: mul_constant:
; CAHP:       # %bb.0:
; CAHP-NEXT:	addi2	sp, -2
; CAHP-NEXT:	swsp	ra, 0(sp)
; CAHP-NEXT:	lsi	a1, 5
; CAHP-NEXT:	jsal	__mulhi3
; CAHP-NEXT:	lwsp	ra, 0(sp)
; CAHP-NEXT:	addi2	sp, 2
; CAHP-NEXT:	jr	ra
  %1 = mul i16 %a, 5
  ret i16 %1
}

define i16 @mul_pow2(i16 %a) nounwind {
; CAHP-LABEL: mul_pow2:
; CAHP:       # %bb.0:
; CAHP-NEXT:	lsli2	a0, 3
; CAHP-NEXT:	jr	ra
  %1 = mul i16 %a, 8
  ret i16 %1
}

define i32 @mul32(i32 %a, i32 %b) nounwind {
; CAHP-LABEL: mul32:
; CAHP:       # %bb.0:
; CAHP-NEXT:	addi2	sp, -2
; CAHP-NEXT:	swsp	ra, 0(sp)
; CAHP-NEXT:	jsal	__mulsi3
; CAHP-NEXT:	lwsp	ra, 0(sp)
; CAHP-NEXT:	addi2	sp, 2
; CAHP-NEXT:	jr	ra
  %1 = mul i32 %a, %b
  ret i32 %1
}

define i32 @mul32_constant(i32 %a) nounwind {
; CAHP-LABEL: mul32_constant:
; CAHP:       # %bb.0:
; CAHP-NEXT:	addi2	sp, -2
; CAHP-NEXT:	swsp	ra, 0(sp)
; CAHP-NEXT:	lsi	a2, 5
; CAHP-NEXT:	lsi	a3, 0
; CAHP-NEXT:	jsal	__mulsi3
; CAHP-NEXT:	lwsp	ra, 0(sp)
; CAHP-NEXT:	addi2	sp, 2
; CAHP-NEXT:	jr	ra
  %1 = mul i32 %a, 5
  ret i32 %1
}
