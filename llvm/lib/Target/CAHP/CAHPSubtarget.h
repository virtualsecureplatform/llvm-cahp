// This file is copied and modified from The LLVM Compiler Infrastructure, which
// is distributed under the Apache License v2.0 with LLVM Exceptions (see
// LICENSE.TXT for details). This file is licensed under the same license.

#ifndef LLVM_LIB_TARGET_CAHP_CAHPSUBTARGET_H
#define LLVM_LIB_TARGET_CAHP_CAHPSUBTARGET_H

#include "CAHPFrameLowering.h"
#include "CAHPISelLowering.h"
#include "CAHPInstrInfo.h"
#include "llvm/CodeGen/SelectionDAGTargetInfo.h"
#include "llvm/CodeGen/TargetSubtargetInfo.h"
#include "llvm/IR/DataLayout.h"
#include "llvm/Target/TargetMachine.h"

#define GET_SUBTARGETINFO_HEADER
#include "CAHPGenSubtargetInfo.inc"

namespace llvm {
class StringRef;

class CAHPSubtarget : public CAHPGenSubtargetInfo {
  virtual void anchor();
  CAHPFrameLowering FrameLowering;
  CAHPInstrInfo InstrInfo;
  CAHPRegisterInfo RegInfo;
  CAHPTargetLowering TLInfo;
  SelectionDAGTargetInfo TSInfo;

  /// Initializes using the passed in CPU and feature strings so that we can
  /// use initializer lists for subtarget initialization.
  CAHPSubtarget &initializeSubtargetDependencies(StringRef CPU, StringRef FS);

public:
  // Initializes the data members to match that of the specified triple.
  CAHPSubtarget(const Triple &TT, const std::string &CPU, const std::string &FS,
                const TargetMachine &TM);

  // Parses features string setting specified subtarget options. The
  // definition of this function is auto-generated by tblgen.
  void ParseSubtargetFeatures(StringRef CPU, StringRef FS);

  const CAHPFrameLowering *getFrameLowering() const override {
    return &FrameLowering;
  }
  const CAHPInstrInfo *getInstrInfo() const override { return &InstrInfo; }
  const CAHPRegisterInfo *getRegisterInfo() const override { return &RegInfo; }
  const CAHPTargetLowering *getTargetLowering() const override {
    return &TLInfo;
  }
  const SelectionDAGTargetInfo *getSelectionDAGInfo() const override {
    return &TSInfo;
  }
};
} // namespace llvm

#endif
